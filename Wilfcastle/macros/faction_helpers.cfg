#textdomain wesnoth-Wilfcastle


#############
# @brief: SET_FACTION_DEBUG - Enable or display side_to_faction debugging code.
#
# @remarks: Pass the variable declared inside to COND_MESSAGE or COND_PRINT.
# 
#############

#define SET_FACTION_DEBUG
    [set_variable]
        name=setFactionDebug
        value=false
    [/set_variable]
    
    {COND_MESSAGE "Turning setFactionDebug to $setFactionDebug" $setFactionDebug}
#enddef


#############
# @brief: BUILD_FACTION_LIST - Build list of factions for Wilfcastle Era.
#
# @remarks: Does NOT include Random.
# 
#############

#define BUILD_FACTION_LIST
    [set_variables]
        name=factions
        [value]
            {FACTIONS_WILFCASTLE}
        [/value]
    [/set_variables]
#enddef


#############
# @brief: DETECT_FACTIONS - Match a side to faction, store results in side_to_faction
# 
#############

#define DETECT_FACTIONS
    {COND_MESSAGE "Detecting faction for sides" $setFactionDebug}

    [lua]
        code={~add-ons/Wilfcastle/macros/detect_faction_lua}
    [/lua]
    
    # Fill out side_to_faction array. 
    # Array indexing is by 0, $side_number is from 1-n.
    # Let's have side 1 represent player 1 and fix the array indexing.
    # TODO: have detect_faction fill this out. 
    [set_variables]
        name=side_to_faction
        mode=replace
        [value] 
            id=0 
        [/value]
        [value] 
            id=$p1_faction_id 
            music=$p1_faction_music 
        [/value]
        [value] 
            id=$p2_faction_id 
            music=$p2_faction_music 
        [/value]
        [value] 
            id=$p3_faction_id 
            music=$p3_faction_music 
        [/value]
        [value] 
            id=$p4_faction_id 
            music=$p4_faction_music 
        [/value]
        [value] 
            id=$p5_faction_id 
            music=$p5_faction_music 
        [/value]
        [value] 
            id=$p6_faction_id 
            music=$p6_faction_music 
        [/value]
        [value] 
            id=$p7_faction_id 
            music=$p7_faction_music 
        [/value]
        [value] 
            id=$p8_faction_id 
            music=$p8_faction_music 
        [/value]
        [value] 
            id=$p9_faction_id 
            music=$p9_faction_music 
        [/value]
    [/set_variables]    
#enddef


#############
# @brief: PRINT_SIDE_TO_FACTION - debugging aid
# 
#############

#define PRINT_SIDE_TO_FACTION
    # Verify that the faction was filled out properly.
    {COND_MESSAGE  "print out side_to_faction" $setFactionDebug}
    {COND_MESSAGE  "1: $side_to_faction[1].id" $setFactionDebug}
    {COND_MESSAGE  "2: $side_to_faction[2].id" $setFactionDebug}
    {COND_MESSAGE  "3: $side_to_faction[3].id" $setFactionDebug}
    {COND_MESSAGE  "4: $side_to_faction[4].id" $setFactionDebug}
    {COND_MESSAGE  "5: $side_to_faction[5].id" $setFactionDebug}
    {COND_MESSAGE  "6: $side_to_faction[6].id" $setFactionDebug}
    {COND_MESSAGE  "7: $side_to_faction[7].id" $setFactionDebug}
    {COND_MESSAGE  "8: $side_to_faction[8].id" $setFactionDebug}
    {COND_MESSAGE  "9: $side_to_faction[9].id" $setFactionDebug}
    {COND_MESSAGE  "print out side_to_faction DONE" $setFactionDebug}
#enddef


#############
# @brief: PRINT_CURRENT_SIDE - debugging aid
# 
#############

#define PRINT_CURRENT_SIDE
    {COND_PRINT "side: $side_number race: $side_to_faction[$side_number].id has taken a turn." $setFactionDebug}
#enddef